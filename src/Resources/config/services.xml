<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="services/listeners.xml"/>
        <import resource="services/normalizers.xml"/>
        <import resource="services/pagination.xml"/>
    </imports>

    <services>
        <service id="paysera_api.rest_request_options_registry"
                 class="Paysera\Bundle\ApiBundle\Service\RestRequestOptionsRegistry"/>

        <service class="Paysera\Bundle\ApiBundle\Service\RestRequestHelper" id="paysera_api.rest_request_helper">
            <argument id="paysera_api.rest_request_options_registry" type="service"/>
        </service>

        <service id="paysera_api.annotations.options_builder"
                 class="Paysera\Bundle\ApiBundle\Service\RoutingLoader\RestRequestAnnotationOptionsBuilder">
            <argument type="service" id="paysera_api.rest_request_options_validator"/>
        </service>

        <service id="paysera_api.attributes.options_builder"
                 class="Paysera\Bundle\ApiBundle\Service\RoutingLoader\RestRequestAttributeOptionsBuilder">
            <argument type="service" id="paysera_api.rest_request_options_validator"/>
        </service>

        <service class="Paysera\Bundle\ApiBundle\Service\ResponseBuilder" id="paysera_api.response_builder"/>
        <service class="\Paysera\Bundle\ApiBundle\Service\ErrorBuilder" id="paysera_api.error_builder">
            <call method="configureError">
                <argument>invalid_request</argument>
                <argument>400</argument>
                <argument>Request content is invalid</argument>
            </call>
            <call method="configureError">
                <argument>invalid_parameters</argument>
                <argument>400</argument>
                <argument>Some required parameter is missing or it's format is invalid</argument>
            </call>
            <call method="configureError">
                <argument>invalid_state</argument>
                <argument>409</argument>
                <argument>Requested action cannot be made to the current state of resource</argument>
            </call>
            <call method="configureError">
                <argument>unauthorized</argument>
                <argument>401</argument>
                <argument>You have not provided any credentials or they are invalid</argument>
            </call>
            <call method="configureError">
                <argument>forbidden</argument>
                <argument>403</argument>
                <argument>You have no rights to access requested resource or make requested action</argument>
            </call>
            <call method="configureError">
                <argument>not_found</argument>
                <argument>404</argument>
                <argument>Resource was not found</argument>
            </call>
            <call method="configureError">
                <argument>internal_server_error</argument>
                <argument>500</argument>
                <argument>Unexpected internal system error</argument>
            </call>
            <call method="configureError">
                <argument>not_acceptable</argument>
                <argument>406</argument>
                <argument>Unknown request or response format</argument>
            </call>
        </service>

        <service class="Paysera\Bundle\ApiBundle\Service\ContentTypeMatcher" id="paysera_api.content_type_matcher"/>
        <service class="Paysera\Bundle\ApiBundle\Service\Validation\CamelCaseToSnakeCaseConverter"
                 id="paysera_api.camel_case_to_snake_case_converter"/>

        <!-- Could be overwritten from Extension -->
        <service id="paysera_api.validation.property_path_converter"
                 alias="paysera_api.camel_case_to_snake_case_converter"
                 public="false"/>

        <service class="Paysera\Bundle\ApiBundle\Service\Validation\EntityValidator"
                 id="paysera_api.entity_validator">
            <argument id="validator" type="service" on-invalid="null"/>
            <argument id="paysera_api.validation.property_path_converter" type="service"/>
        </service>

        <service class="Paysera\Bundle\ApiBundle\Service\RestRequestOptionsValidator"
                 id="paysera_api.rest_request_options_validator">
            <argument type="service" id="paysera_normalization.normalizer_registry"/>
            <argument type="service" id="paysera_api.path_attribute_resolver_registry"/>
        </service>

        <service class="Paysera\Bundle\ApiBundle\Service\PathAttributeResolver\PathAttributeResolverRegistry"
                 id="paysera_api.path_attribute_resolver_registry">
            <!-- registerPathAttributeResolver is called for each service tagged with paysera_api.path_attribute_resolver -->
        </service>
        <service class="Paysera\Bundle\ApiBundle\Service\PathAttributeResolver\PathAttributeResolutionManager"
                 id="paysera_api.path_attribute_resolution_manager">
            <argument type="service" id="paysera_api.path_attribute_resolver_registry"/>
        </service>
    </services>
</container>
